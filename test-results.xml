<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="39" time="41.943" timestamp="2025-08-06T10:03:07.459895+00:00" hostname="DESKTOP-N5VIQ32"><testcase classname="polls.tests.test_serializers.TestVoteSerializer" name="test_deserialization_valid" time="3.647" /><testcase classname="polls.tests.test_models.TestVoteModel" name="test_vote_creation" time="3.651" /><testcase classname="polls.tests.test_serializers.TestVoteSerializer" name="test_deserialization_invalid" time="0.045"><failure message="AssertionError: assert not True&#10; +  where True = is_valid()&#10; +    where is_valid = VoteSerializer(data={}):\n    id = IntegerField(label='ID', read_only=True)\n    user = UserSerializer(read_only=True):\n        id = IntegerField(label='ID', read_only=True)\n        username = CharField(max_length=150, validators=[&lt;UniqueValidator(queryset=User.objects.all())&gt;])\n        email = EmailField(required=True)\n        first_name = CharField(allow_blank=True, max_length=30, required=False)\n        last_name = CharField(allow_blank=True, max_length=30, required=False)\n        password = CharField(max_length=128, write_only=True)\n        is_active = BooleanField(required=False)\n        roles = RoleSerializer(many=True, read_only=True):\n            id = IntegerField(label='ID', read_only=True)\n            name = ChoiceField(choices=[('admin', 'Admin'), ('creator', 'Creator'), ('user', 'User')], validators=[&lt;UniqueValidator(queryset=Role.objects.all())&gt;])\n    voted_at = DateTimeField(read_only=True).is_valid">self = &lt;polls.tests.test_serializers.TestVoteSerializer object at 0x7cfa76fd34f0&gt;

    def test_deserialization_invalid(self):
        """Test Vote deserialization with invalid data (missing fields)."""
        data = {}
        serializer = VoteSerializer(data=data)
&gt;       assert not serializer.is_valid()
E       AssertionError: assert not True
E        +  where True = is_valid()
E        +    where is_valid = VoteSerializer(data={}):\n    id = IntegerField(label='ID', read_only=True)\n    user = UserSerializer(read_only=True):\n        id = IntegerField(label='ID', read_only=True)\n        username = CharField(max_length=150, validators=[&lt;UniqueValidator(queryset=User.objects.all())&gt;])\n        email = EmailField(required=True)\n        first_name = CharField(allow_blank=True, max_length=30, required=False)\n        last_name = CharField(allow_blank=True, max_length=30, required=False)\n        password = CharField(max_length=128, write_only=True)\n        is_active = BooleanField(required=False)\n        roles = RoleSerializer(many=True, read_only=True):\n            id = IntegerField(label='ID', read_only=True)\n            name = ChoiceField(choices=[('admin', 'Admin'), ('creator', 'Creator'), ('user', 'User')], validators=[&lt;UniqueValidator(queryset=Role.objects.all())&gt;])\n    voted_at = DateTimeField(read_only=True).is_valid

polls/tests/test_serializers.py:118: AssertionError</failure></testcase><testcase classname="polls.tests.test_models.TestPollModel" name="test_poll_creation" time="3.914" /><testcase classname="polls.tests.test_serializers.TestPollSerializer" name="test_deserialization_invalid_missing_title" time="0.035" /><testcase classname="tests.integration_tests" name="test_protected_endpoints" time="8.212" /><testcase classname="polls.tests.test_serializers.TestPollOptionSerializer" name="test_deserialization_valid" time="4.146" /><testcase classname="polls.tests.test_models.TestPollModel" name="test_poll_status_closed" time="5.195" /><testcase classname="polls.tests.test_serializers.TestPollSerializer" name="test_serialization" time="5.436" /><testcase classname="polls.tests.test_models.TestPollOptionModel" name="test_poll_option_creation" time="5.452" /><testcase classname="polls.tests.test_models.TestVoteModel" name="test_unique_vote_per_user_per_poll" time="5.514" /><testcase classname="polls.tests.test_serializers.TestVoteSerializer" name="test_serialization" time="3.034" /><testcase classname="tests.integration_tests" name="test_refresh_token" time="10.998" /><testcase classname="polls.tests.test_models.TestPollModel" name="test_poll_status_open" time="4.359" /><testcase classname="tests.integration_tests" name="test_user_registration" time="12.590" /><testcase classname="polls.tests.test_serializers.TestPollSerializer" name="test_deserialization_valid_create_with_options" time="3.857" /><testcase classname="users.tests.test_models.TestUserModel" name="test_superuser_creation" time="8.596" /><testcase classname="polls.tests.test_models.TestPollOptionModel" name="test_poll_option_str_representation" time="4.551" /><testcase classname="users.tests.test_models.TestUserModel" name="test_user_str_representation" time="3.857" /><testcase classname="polls.tests.test_models.TestVoteModel" name="test_vote_str_representation" time="6.482" /><testcase classname="polls.tests.test_views.PollViewTests" name="test_list_view" time="7.365" /><testcase classname="polls.tests.test_models.TestPollModel" name="test_poll_str_representation" time="5.422" /><testcase classname="users.tests.test_models.TestUserModel" name="test_user_creation" time="8.403" /><testcase classname="polls.tests.test_serializers.TestPollOptionSerializer" name="test_serialization" time="5.763" /><testcase classname="users.tests.test_models.TestUserModel" name="test_unique_email" time="11.511" /><testcase classname="tests.integration_tests" name="test_invalid_registration" time="0.205" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_list_users_unauthenticated" time="0.608" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_update_user_self" time="5.968" /><testcase classname="users.tests.test_models.TestUserModel" name="test_unique_username" time="9.961" /><testcase classname="users.tests.test_serializers.TestUserSerializer" name="test_user_serialization" time="3.456" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_retrieve_user_authenticated" time="4.334" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_update_user_admin" time="8.396" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_list_users_authenticated" time="7.412" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_delete_user_self" time="3.699" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_update_user_other_user_authenticated" time="8.940" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_retrieve_other_user_authenticated" time="9.697" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_retrieve_user_unauthenticated" time="6.493" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_delete_user_other_user_authenticated" time="8.452" /><testcase classname="users.tests.test_views.TestUserViewSet" name="test_delete_user_admin" time="7.123" /></testsuite></testsuites>